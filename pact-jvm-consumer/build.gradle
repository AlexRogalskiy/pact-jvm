
dependencies {
    compile project(path: ":pact-jvm-model", configuration: 'default'),
      project(path: ":pact-jvm-matchers_${project.scalaVersion}", configuration: 'default'),
      'com.googlecode.java-diff-utils:diffutils:1.3.0',
      'dk.brics.automaton:automaton:1.11-8',
      "org.apache.httpcomponents:httpclient:${project.httpClientVersion}"
    compile "org.json:json:${project.jsonVersion}"
    compile "io.netty:netty-handler:${project.nettyVersion}"
    compile "org.apache.httpcomponents:httpmime:${project.httpClientVersion}"
    compile "ws.unfiltered:unfiltered-netty-server_${project.scalaVersion}:0.9.1"
    compile "org.apache.httpcomponents:fluent-hc:${project.httpClientVersion}"
    compile 'org.scala-lang.modules:scala-java8-compat_2.12:0.8.0'
    compile "org.codehaus.groovy:groovy-json:${project.groovyVersion}"

    testCompile "ch.qos.logback:logback-classic:${project.logbackVersion}"
    testCompile 'org.cthul:cthul-matchers:1.1.0'
    testCompile "org.junit.jupiter:junit-jupiter-api:${project.junit5Version}"
    testRuntime "org.junit.jupiter:junit-jupiter-engine:${project.junit5Version}"
    testRuntime "org.junit.vintage:junit-vintage-engine:${project.junit5Version}"
    testCompile "org.codehaus.groovy:groovy-dateutil:${project.groovyVersion}"
}

// The language compilers should execute in this order
// Java then Kotlin then Scala then Groovy
sourceSets.main.scala.srcDir "src/main/java"
sourceSets.main.java.srcDirs = []

compileKotlin {
    dependsOn tasks.getByPath('compileGroovy'), tasks.getByPath('compileScala')
    dependsOn.remove('compileJava')
    classpath += files(compileGroovy.destinationDir) + files(compileScala.destinationDir)
}
compileGroovy.dependsOn.remove("compileJava")
compileScala.dependsOn = []
compileTestGroovy.dependsOn compileTestScala

test {
  useJUnitPlatform()

  // Show test results.
  testLogging {
    events "passed", "skipped", "failed"
  }
}
