plugins {
  id 'antlr'
}

dependencies {
  implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion"
  implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlinVersion"
  implementation "org.apache.commons:commons-lang3:${project.commonsLang3Version}"
  implementation "com.google.code.findbugs:jsr305:3.0.2"
  api("io.github.microutils:kotlin-logging:$kotlinLogging") {
    exclude group: 'org.jetbrains.kotlin'
  }
  implementation "org.apache.httpcomponents.client5:httpclient5:${project.httpClientVersion}"
  api "com.michael-bull.kotlin-result:kotlin-result:$kotlinResult"

  testImplementation "org.codehaus.groovy:groovy:${project.groovyVersion}"
  testImplementation "org.junit.jupiter:junit-jupiter-api:${project.junit5Version}"
  testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:${project.junit5Version}"
  testRuntimeOnly "org.junit.vintage:junit-vintage-engine:${project.junit5Version}"
  testImplementation 'org.hamcrest:hamcrest:2.2'
  testImplementation('org.spockframework:spock-core:2.0-groovy-3.0') {
    exclude group: 'org.codehaus.groovy'
  }
  testImplementation "junit:junit:${project.junitVersion}"

  antlr "org.antlr:antlr4:4.9.2"
}

compileJava {
  classpath = classpath.plus(files(compileKotlin.destinationDir))
  dependsOn compileKotlin
}
